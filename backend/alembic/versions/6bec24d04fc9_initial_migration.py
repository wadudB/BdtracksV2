"""initial_migration

Revision ID: 6bec24d04fc9
Revises: 
Create Date: 2025-04-15 15:02:13.513785

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6bec24d04fc9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commodity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('min_price', sa.Integer(), nullable=True),
    sa.Column('max_price', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commodity_id'), 'commodity', ['id'], unique=False)
    op.create_index(op.f('ix_commodity_name'), 'commodity', ['name'], unique=False)
    op.create_table('region',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('bengali_name', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.Float(precision=10, decimal_return_scale=6), nullable=False),
    sa.Column('longitude', sa.Float(precision=10, decimal_return_scale=6), nullable=False),
    sa.Column('is_division', sa.Boolean(), nullable=False),
    sa.Column('parent_region_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['parent_region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_region_id'), 'region', ['id'], unique=False)
    op.create_index(op.f('ix_region_name'), 'region', ['name'], unique=False)
    op.create_table('supplychainstage',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_supplychainstage_id'), 'supplychainstage', ['id'], unique=False)
    op.create_index(op.f('ix_supplychainstage_name'), 'supplychainstage', ['name'], unique=False)
    op.create_table('user',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('admin', 'data_entry', 'viewer', name='user_role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('pricehistoryaggregated',
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('avg_price', sa.Integer(), nullable=False),
    sa.Column('min_price', sa.Integer(), nullable=False),
    sa.Column('max_price', sa.Integer(), nullable=False),
    sa.Column('period', sa.Enum('daily', 'weekly', 'monthly', 'quarterly', 'yearly', name='aggregation_period'), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pricehistoryaggregated_id'), 'pricehistoryaggregated', ['id'], unique=False)
    op.create_table('pricerecord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('recorded_by', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('recorded_at', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], ),
    sa.ForeignKeyConstraint(['recorded_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pricerecord_id'), 'pricerecord', ['id'], unique=False)
    op.create_table('supplychaindata',
    sa.Column('commodity_id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('stakeholders', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('recorded_at', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['commodity_id'], ['commodity.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['stage_id'], ['supplychainstage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_supplychaindata_id'), 'supplychaindata', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_supplychaindata_id'), table_name='supplychaindata')
    op.drop_table('supplychaindata')
    op.drop_index(op.f('ix_pricerecord_id'), table_name='pricerecord')
    op.drop_table('pricerecord')
    op.drop_index(op.f('ix_pricehistoryaggregated_id'), table_name='pricehistoryaggregated')
    op.drop_table('pricehistoryaggregated')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_supplychainstage_name'), table_name='supplychainstage')
    op.drop_index(op.f('ix_supplychainstage_id'), table_name='supplychainstage')
    op.drop_table('supplychainstage')
    op.drop_index(op.f('ix_region_name'), table_name='region')
    op.drop_index(op.f('ix_region_id'), table_name='region')
    op.drop_table('region')
    op.drop_index(op.f('ix_commodity_name'), table_name='commodity')
    op.drop_index(op.f('ix_commodity_id'), table_name='commodity')
    op.drop_table('commodity')
    # ### end Alembic commands ### 