name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Package application
      - name: Create deployment package
        run: |
          mkdir -p deployment
          
          # Copy backend files (without __pycache__ folders)
          cp -r backend deployment/
          find deployment/backend -name "__pycache__" -type d -exec rm -rf {} +
          
          # Copy frontend build
          cp -r frontend/dist deployment/frontend
          
          # Create requirements.txt for cPanel Python setup
          python -m pip install poetry
          cd backend && poetry export -f requirements.txt --output ../deployment/backend/requirements.txt --without-hashes
          
      # Deploy to cPanel - Using FTP
      - name: Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.CPANEL_FTP_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          local-dir: ./deployment/
          server-dir: ${{ secrets.CPANEL_PATH }}/
          protocol: ftp