// This file is auto-generated by @hey-api/openapi-ts

/**
 * AccidentData
 */
export type AccidentData = {
  /**
   * Year
   */
  year: number;
  /**
   * Total Accidents
   */
  total_accidents?: number | null;
  /**
   * Total Killed
   */
  total_killed?: number | null;
  /**
   * Total Injured
   */
  total_injured?: number | null;
  /**
   * Daily Deaths
   */
  daily_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Daily Injured
   */
  daily_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Deaths
   */
  monthly_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Injured
   */
  monthly_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Accident Hotspot
   */
  accident_hotspot?: string | null;
  /**
   * Vehicles Involved
   */
  vehicles_involved?: {
    [key: string]: number;
  } | null;
  /**
   * Date
   */
  date?: null;
  /**
   * Accidents By District
   */
  accidents_by_district?: {
    [key: string]: number;
  } | null;
  /**
   * Id
   */
  id: number;
  /**
   * Created At
   */
  created_at: Date;
  /**
   * Last Updated
   */
  last_updated: Date | null;
};

/**
 * AccidentDataCreate
 */
export type AccidentDataCreate = {
  /**
   * Year
   */
  year: number;
  /**
   * Total Accidents
   */
  total_accidents?: number | null;
  /**
   * Total Killed
   */
  total_killed?: number | null;
  /**
   * Total Injured
   */
  total_injured?: number | null;
  /**
   * Daily Deaths
   */
  daily_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Daily Injured
   */
  daily_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Deaths
   */
  monthly_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Injured
   */
  monthly_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Accident Hotspot
   */
  accident_hotspot?: string | null;
  /**
   * Vehicles Involved
   */
  vehicles_involved?: {
    [key: string]: number;
  } | null;
  /**
   * Date
   */
  date?: null;
  /**
   * Accidents By District
   */
  accidents_by_district?: {
    [key: string]: number;
  } | null;
};

/**
 * AccidentDataUpdate
 */
export type AccidentDataUpdate = {
  /**
   * Year
   */
  year?: number | null;
  /**
   * Total Accidents
   */
  total_accidents?: number | null;
  /**
   * Total Killed
   */
  total_killed?: number | null;
  /**
   * Total Injured
   */
  total_injured?: number | null;
  /**
   * Daily Deaths
   */
  daily_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Daily Injured
   */
  daily_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Deaths
   */
  monthly_deaths?: {
    [key: string]: number;
  } | null;
  /**
   * Monthly Injured
   */
  monthly_injured?: {
    [key: string]: number;
  } | null;
  /**
   * Accident Hotspot
   */
  accident_hotspot?: string | null;
  /**
   * Vehicles Involved
   */
  vehicles_involved?: {
    [key: string]: number;
  } | null;
  /**
   * Date
   */
  date?: null;
  /**
   * Accidents By District
   */
  accidents_by_district?: {
    [key: string]: number;
  } | null;
};

/**
 * AccidentScrapingResponse
 * Response schema for accident scraping endpoint
 */
export type AccidentScrapingResponse = {
  /**
   * Message
   */
  message: string;
  /**
   * Scraping Completed
   */
  scraping_completed: boolean;
  /**
   * Summary
   */
  summary?: {
    [key: string]: unknown;
  } | null;
  /**
   * Scraping Error
   */
  scraping_error?: string | null;
};

/**
 * AllAccidentsData
 */
export type AllAccidentsData = {
  /**
   * Newscategory
   */
  newsCategory?: string | null;
  /**
   * Id
   */
  id?: string | null;
  /**
   * Numberofaccidentsoccured
   */
  numberOfAccidentsOccured?: string | null;
  /**
   * Istheaccidentdatayearlymonthlyordaily
   */
  isTheAccidentDataYearlyMonthlyOrDaily?: string | null;
  /**
   * Dayoftheweekoftheaccident
   */
  dayOfTheWeekOfTheAccident?: string | null;
  /**
   * Exactlocationofaccident
   */
  exactLocationOfAccident?: string | null;
  /**
   * Areaofaccident
   */
  areaOfAccident?: string | null;
  /**
   * Divisionofaccident
   */
  divisionOfAccident?: string | null;
  /**
   * Districtofaccident
   */
  districtOfAccident?: string | null;
  /**
   * Subdistrictorupazilaofaccident
   */
  subdistrictOrUpazilaOfAccident?: string | null;
  /**
   * Isplaceofaccidenthighwayorexpresswayorwaterorothers
   */
  isPlaceOfAccidentHighwayOrExpresswayOrWaterOrOthers?: string | null;
  /**
   * Iscountrybangladeshorothercountry
   */
  isCountryBangladeshOrOtherCountry?: string | null;
  /**
   * Accidenttype
   */
  accidentType?: string | null;
  /**
   * Totalnumberofpeoplekilled
   */
  totalNumberOfPeopleKilled?: string | null;
  /**
   * Totalnumberofpeopleinjured
   */
  totalNumberOfPeopleInjured?: string | null;
  /**
   * Reasonorcauseforaccident
   */
  reasonOrCauseForAccident?: string | null;
  /**
   * Primaryvehicleinvolved
   */
  primaryVehicleInvolved?: string | null;
  /**
   * Secondaryvehicleinvolved
   */
  secondaryVehicleInvolved?: string | null;
  /**
   * Tertiaryvehicleinvolved
   */
  tertiaryVehicleInvolved?: string | null;
  /**
   * Anymorevehiclesinvolved
   */
  anyMoreVehiclesInvolved?: string | null;
  /**
   * Availableagesofthedeceased
   */
  availableAgesOfTheDeceased?: string | null;
  /**
   * Accidentdatetimefromurl
   */
  accidentDatetimeFromUrl?: Date | null;
  /**
   * Accidentdate
   */
  accidentDate?: Date | null;
  /**
   * Url
   */
  url?: string | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Accidentidnumberurl
   */
  accidentIdNumberUrl?: string | null;
  /**
   * Contentswholegptresponse
   */
  contentsWholeGptResponse?: string | null;
  /**
   * Articlestextfromurl
   */
  articlesTextFromUrl?: string | null;
  /**
   * Articletitle
   */
  articleTitle?: string | null;
  /**
   * Headline
   */
  headline?: string | null;
  /**
   * Summary
   */
  summary?: string | null;
  /**
   * Duplicatecheck
   */
  duplicateCheck?: boolean | null;
  /**
   * Uid
   */
  uId: number;
};

/**
 * AllAccidentsDataCreate
 */
export type AllAccidentsDataCreate = {
  /**
   * News Category
   */
  news_category?: string | null;
  /**
   * Id
   */
  id?: string | null;
  /**
   * Number Of Accidents Occured
   */
  number_of_accidents_occured?: string | null;
  /**
   * Is The Accident Data Yearly Monthly Or Daily
   */
  is_the_accident_data_yearly_monthly_or_daily?: string | null;
  /**
   * Day Of The Week Of The Accident
   */
  day_of_the_week_of_the_accident?: string | null;
  /**
   * Exact Location Of Accident
   */
  exact_location_of_accident?: string | null;
  /**
   * Area Of Accident
   */
  area_of_accident?: string | null;
  /**
   * Division Of Accident
   */
  division_of_accident?: string | null;
  /**
   * District Of Accident
   */
  district_of_accident?: string | null;
  /**
   * Subdistrict Or Upazila Of Accident
   */
  subdistrict_or_upazila_of_accident?: string | null;
  /**
   * Is Place Of Accident Highway Or Expressway Or Water Or Others
   */
  is_place_of_accident_highway_or_expressway_or_water_or_others?: string | null;
  /**
   * Is Country Bangladesh Or Other Country
   */
  is_country_bangladesh_or_other_country?: string | null;
  /**
   * Accident Type
   */
  accident_type?: string | null;
  /**
   * Total Number Of People Killed
   */
  total_number_of_people_killed?: string | null;
  /**
   * Total Number Of People Injured
   */
  total_number_of_people_injured?: string | null;
  /**
   * Reason Or Cause For Accident
   */
  reason_or_cause_for_accident?: string | null;
  /**
   * Primary Vehicle Involved
   */
  primary_vehicle_involved?: string | null;
  /**
   * Secondary Vehicle Involved
   */
  secondary_vehicle_involved?: string | null;
  /**
   * Tertiary Vehicle Involved
   */
  tertiary_vehicle_involved?: string | null;
  /**
   * Any More Vehicles Involved
   */
  any_more_vehicles_involved?: string | null;
  /**
   * Available Ages Of The Deceased
   */
  available_ages_of_the_deceased?: string | null;
  /**
   * Accident Datetime From Url
   */
  accident_datetime_from_url?: Date | null;
  /**
   * Accident Date
   */
  accident_date?: Date | null;
  /**
   * Url
   */
  url?: string | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Accident Id Number Url
   */
  accident_id_number_url?: string | null;
  /**
   * Contents Whole Gpt Response
   */
  contents_whole_gpt_response?: string | null;
  /**
   * Articles Text From Url
   */
  articles_text_from_url?: string | null;
  /**
   * Article Title
   */
  article_title?: string | null;
  /**
   * Headline
   */
  headline?: string | null;
  /**
   * Summary
   */
  summary?: string | null;
  /**
   * Duplicate Check
   */
  duplicate_check?: boolean | null;
};

/**
 * AllAccidentsDataUpdate
 */
export type AllAccidentsDataUpdate = {
  /**
   * News Category
   */
  news_category?: string | null;
  /**
   * Id
   */
  id?: string | null;
  /**
   * Number Of Accidents Occured
   */
  number_of_accidents_occured?: string | null;
  /**
   * Is The Accident Data Yearly Monthly Or Daily
   */
  is_the_accident_data_yearly_monthly_or_daily?: string | null;
  /**
   * Day Of The Week Of The Accident
   */
  day_of_the_week_of_the_accident?: string | null;
  /**
   * Exact Location Of Accident
   */
  exact_location_of_accident?: string | null;
  /**
   * Area Of Accident
   */
  area_of_accident?: string | null;
  /**
   * Division Of Accident
   */
  division_of_accident?: string | null;
  /**
   * District Of Accident
   */
  district_of_accident?: string | null;
  /**
   * Subdistrict Or Upazila Of Accident
   */
  subdistrict_or_upazila_of_accident?: string | null;
  /**
   * Is Place Of Accident Highway Or Expressway Or Water Or Others
   */
  is_place_of_accident_highway_or_expressway_or_water_or_others?: string | null;
  /**
   * Is Country Bangladesh Or Other Country
   */
  is_country_bangladesh_or_other_country?: string | null;
  /**
   * Accident Type
   */
  accident_type?: string | null;
  /**
   * Total Number Of People Killed
   */
  total_number_of_people_killed?: string | null;
  /**
   * Total Number Of People Injured
   */
  total_number_of_people_injured?: string | null;
  /**
   * Reason Or Cause For Accident
   */
  reason_or_cause_for_accident?: string | null;
  /**
   * Primary Vehicle Involved
   */
  primary_vehicle_involved?: string | null;
  /**
   * Secondary Vehicle Involved
   */
  secondary_vehicle_involved?: string | null;
  /**
   * Tertiary Vehicle Involved
   */
  tertiary_vehicle_involved?: string | null;
  /**
   * Any More Vehicles Involved
   */
  any_more_vehicles_involved?: string | null;
  /**
   * Available Ages Of The Deceased
   */
  available_ages_of_the_deceased?: string | null;
  /**
   * Accident Datetime From Url
   */
  accident_datetime_from_url?: Date | null;
  /**
   * Accident Date
   */
  accident_date?: Date | null;
  /**
   * Url
   */
  url?: string | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Accident Id Number Url
   */
  accident_id_number_url?: string | null;
  /**
   * Contents Whole Gpt Response
   */
  contents_whole_gpt_response?: string | null;
  /**
   * Articles Text From Url
   */
  articles_text_from_url?: string | null;
  /**
   * Article Title
   */
  article_title?: string | null;
  /**
   * Headline
   */
  headline?: string | null;
  /**
   * Summary
   */
  summary?: string | null;
  /**
   * Duplicate Check
   */
  duplicate_check?: boolean | null;
};

/**
 * Commodity
 */
export type Commodity = {
  /**
   * Name
   */
  name?: string | null;
  /**
   * Bengaliname
   */
  bengaliName?: string | null;
  /**
   * Category
   */
  category?: string | null;
  /**
   * Unit
   */
  unit?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Imageurl
   */
  imageUrl?: string | null;
  /**
   * Id
   */
  id: number;
  /**
   * Createdat
   */
  createdAt: Date;
  /**
   * Minprice
   */
  minPrice?: number | null;
  /**
   * Maxprice
   */
  maxPrice?: number | null;
  /**
   * Currentprice
   */
  currentPrice?: number | null;
  /**
   * Weeklychange
   */
  weeklyChange?: number | null;
  /**
   * Monthlychange
   */
  monthlyChange?: number | null;
  /**
   * Yearlychange
   */
  yearlyChange?: number | null;
};

/**
 * CommodityCreate
 */
export type CommodityCreate = {
  /**
   * Name
   */
  name?: string | null;
  /**
   * Bengali Name
   */
  bengali_name?: string | null;
  /**
   * Category
   */
  category?: string | null;
  /**
   * Unit
   */
  unit?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Image Url
   */
  image_url?: string | null;
};

/**
 * CommodityDetail
 */
export type CommodityDetail = {
  /**
   * Name
   */
  name?: string | null;
  /**
   * Bengaliname
   */
  bengaliName?: string | null;
  /**
   * Category
   */
  category?: string | null;
  /**
   * Unit
   */
  unit?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Imageurl
   */
  imageUrl?: string | null;
  /**
   * Id
   */
  id: number;
  /**
   * Createdat
   */
  createdAt: Date;
  /**
   * Minprice
   */
  minPrice?: number | null;
  /**
   * Maxprice
   */
  maxPrice?: number | null;
  /**
   * Currentprice
   */
  currentPrice?: number | null;
  /**
   * Weeklychange
   */
  weeklyChange?: number | null;
  /**
   * Monthlychange
   */
  monthlyChange?: number | null;
  /**
   * Yearlychange
   */
  yearlyChange?: number | null;
  /**
   * Pricehistory
   */
  priceHistory?: Array<PricePoint> | null;
  /**
   * Regionalprices
   */
  regionalPrices?: Array<RegionalPrice> | null;
};

/**
 * CommodityInDropdown
 */
export type CommodityInDropdown = {
  /**
   * Id
   */
  id: number;
  /**
   * Name
   */
  name: string;
  /**
   * Bengaliname
   */
  bengaliName?: string | null;
};

/**
 * CommodityUpdate
 */
export type CommodityUpdate = {
  /**
   * Name
   */
  name?: string | null;
  /**
   * Bengali Name
   */
  bengali_name?: string | null;
  /**
   * Category
   */
  category?: string | null;
  /**
   * Unit
   */
  unit?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Image Url
   */
  image_url?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
  /**
   * Detail
   */
  detail?: Array<ValidationError>;
};

/**
 * Location
 */
export type Location = {
  /**
   * Name
   */
  name: string;
  /**
   * Address
   * Formatted address of the location
   */
  address?: string | null;
  /**
   * Latitude
   * Latitude coordinate of the location
   */
  latitude: number;
  /**
   * Longitude
   * Longitude coordinate of the location
   */
  longitude: number;
  /**
   * Place Id
   * Google Maps Place ID
   */
  place_id?: string | null;
  /**
   * Poi Id
   * Google Maps POI ID
   */
  poi_id?: string | null;
  /**
   * Id
   */
  id: number;
  /**
   * Created At
   */
  created_at: Date;
  /**
   * Updated At
   */
  updated_at?: Date | null;
};

/**
 * LocationCreate
 */
export type LocationCreate = {
  /**
   * Name
   */
  name: string;
  /**
   * Address
   * Formatted address of the location
   */
  address?: string | null;
  /**
   * Latitude
   * Latitude coordinate of the location
   */
  latitude: number;
  /**
   * Longitude
   * Longitude coordinate of the location
   */
  longitude: number;
  /**
   * Place Id
   * Google Maps Place ID
   */
  place_id?: string | null;
  /**
   * Poi Id
   * Google Maps POI ID
   */
  poi_id?: string | null;
};

/**
 * LocationUpdate
 */
export type LocationUpdate = {
  /**
   * Name
   */
  name?: string | null;
  /**
   * Address
   * Formatted address of the location
   */
  address?: string | null;
  /**
   * Latitude
   */
  latitude?: number | null;
  /**
   * Longitude
   */
  longitude?: number | null;
  /**
   * Place Id
   */
  place_id?: string | null;
  /**
   * Poi Id
   */
  poi_id?: string | null;
};

/**
 * PricePoint
 */
export type PricePoint = {
  /**
   * Date
   */
  date: string;
  /**
   * Price
   */
  price: number;
};

/**
 * PriceRecord
 */
export type PriceRecord = {
  /**
   * Commodity Id
   */
  commodity_id: number;
  /**
   * Region Id
   */
  region_id: number;
  /**
   * Price
   */
  price: number;
  /**
   * Recorded By
   */
  recorded_by?: number | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Source Url
   */
  source_url?: string | null;
  /**
   * Notes
   */
  notes?: string | null;
  /**
   * Location Id
   * ID of the associated location
   */
  location_id?: number | null;
  /**
   * Recorded At
   */
  recorded_at: Date;
  /**
   * Id
   */
  id: number;
  /**
   * Created At
   */
  created_at: Date;
  location?: Location | null;
};

/**
 * PriceRecordCreate
 */
export type PriceRecordCreate = {
  /**
   * Commodity Id
   */
  commodity_id: number;
  /**
   * Region Id
   */
  region_id: number;
  /**
   * Price
   */
  price: number;
  /**
   * Recorded By
   */
  recorded_by?: number | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Source Url
   */
  source_url?: string | null;
  /**
   * Notes
   */
  notes?: string | null;
  /**
   * Location Id
   * ID of the associated location
   */
  location_id?: number | null;
  /**
   * Recorded At
   */
  recorded_at: Date;
  /**
   * Location details to create
   */
  location?: LocationCreate | null;
};

/**
 * PriceRecordUpdate
 */
export type PriceRecordUpdate = {
  /**
   * Commodity Id
   */
  commodity_id?: number | null;
  /**
   * Region Id
   */
  region_id?: number | null;
  /**
   * Price
   */
  price?: number | null;
  /**
   * Source
   */
  source?: string | null;
  /**
   * Notes
   */
  notes?: string | null;
  /**
   * Location Id
   */
  location_id?: number | null;
  /**
   * Recorded At
   */
  recorded_at?: Date | null;
};

/**
 * Region
 */
export type Region = {
  /**
   * Name
   */
  name: string;
  /**
   * Bengali Name
   */
  bengali_name?: string | null;
  /**
   * Latitude
   */
  latitude: number;
  /**
   * Longitude
   */
  longitude: number;
  /**
   * Is Division
   */
  is_division?: boolean;
  /**
   * Parent Region Id
   */
  parent_region_id?: number | null;
  /**
   * Id
   */
  id: number;
  /**
   * Created At
   */
  created_at: Date;
};

/**
 * RegionCreate
 */
export type RegionCreate = {
  /**
   * Name
   */
  name: string;
  /**
   * Bengali Name
   */
  bengali_name?: string | null;
  /**
   * Latitude
   */
  latitude: number;
  /**
   * Longitude
   */
  longitude: number;
  /**
   * Is Division
   */
  is_division?: boolean;
  /**
   * Parent Region Id
   */
  parent_region_id?: number | null;
};

/**
 * RegionalPrice
 */
export type RegionalPrice = {
  /**
   * Region
   */
  region: string;
  /**
   * Price
   */
  price: number;
  /**
   * Change
   */
  change: number;
};

/**
 * User
 */
export type User = {
  /**
   * Email
   */
  email: string;
  /**
   * Username
   */
  username: string;
  /**
   * Full Name
   */
  full_name?: string | null;
  /**
   * Is Active
   */
  is_active?: boolean;
  /**
   * Role
   */
  role?: string;
  /**
   * Id
   */
  id: number;
  /**
   * Created At
   */
  created_at: Date;
};

/**
 * UserCreate
 */
export type UserCreate = {
  /**
   * Email
   */
  email: string;
  /**
   * Username
   */
  username: string;
  /**
   * Full Name
   */
  full_name?: string | null;
  /**
   * Is Active
   */
  is_active?: boolean;
  /**
   * Role
   */
  role?: string;
  /**
   * Password
   */
  password: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
  /**
   * Location
   */
  loc: Array<string | number>;
  /**
   * Message
   */
  msg: string;
  /**
   * Error Type
   */
  type: string;
};

export type ReadUsersApiV1UsersGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
  };
  url: "/api/v1/users/";
};

export type ReadUsersApiV1UsersGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadUsersApiV1UsersGetError =
  ReadUsersApiV1UsersGetErrors[keyof ReadUsersApiV1UsersGetErrors];

export type ReadUsersApiV1UsersGetResponses = {
  /**
   * Response Read Users Api V1 Users  Get
   * Successful Response
   */
  200: Array<User>;
};

export type ReadUsersApiV1UsersGetResponse =
  ReadUsersApiV1UsersGetResponses[keyof ReadUsersApiV1UsersGetResponses];

export type CreateUserApiV1UsersPostData = {
  body: UserCreate;
  path?: never;
  query?: never;
  url: "/api/v1/users/";
};

export type CreateUserApiV1UsersPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateUserApiV1UsersPostError =
  CreateUserApiV1UsersPostErrors[keyof CreateUserApiV1UsersPostErrors];

export type CreateUserApiV1UsersPostResponses = {
  /**
   * Successful Response
   */
  201: User;
};

export type CreateUserApiV1UsersPostResponse =
  CreateUserApiV1UsersPostResponses[keyof CreateUserApiV1UsersPostResponses];

export type ReadUserApiV1UsersIdGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/users/{id}";
};

export type ReadUserApiV1UsersIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadUserApiV1UsersIdGetError =
  ReadUserApiV1UsersIdGetErrors[keyof ReadUserApiV1UsersIdGetErrors];

export type ReadUserApiV1UsersIdGetResponses = {
  /**
   * Successful Response
   */
  200: User;
};

export type ReadUserApiV1UsersIdGetResponse =
  ReadUserApiV1UsersIdGetResponses[keyof ReadUserApiV1UsersIdGetResponses];

export type ReadCommoditiesApiV1CommoditiesGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
    /**
     * Category
     */
    category?: string | null;
  };
  url: "/api/v1/commodities/";
};

export type ReadCommoditiesApiV1CommoditiesGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadCommoditiesApiV1CommoditiesGetError =
  ReadCommoditiesApiV1CommoditiesGetErrors[keyof ReadCommoditiesApiV1CommoditiesGetErrors];

export type ReadCommoditiesApiV1CommoditiesGetResponses = {
  /**
   * Response Read Commodities Api V1 Commodities  Get
   * Successful Response
   */
  200: Array<Commodity>;
};

export type ReadCommoditiesApiV1CommoditiesGetResponse =
  ReadCommoditiesApiV1CommoditiesGetResponses[keyof ReadCommoditiesApiV1CommoditiesGetResponses];

export type CreateCommodityApiV1CommoditiesPostData = {
  body: CommodityCreate;
  path?: never;
  query?: never;
  url: "/api/v1/commodities/";
};

export type CreateCommodityApiV1CommoditiesPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateCommodityApiV1CommoditiesPostError =
  CreateCommodityApiV1CommoditiesPostErrors[keyof CreateCommodityApiV1CommoditiesPostErrors];

export type CreateCommodityApiV1CommoditiesPostResponses = {
  /**
   * Successful Response
   */
  201: Commodity;
};

export type CreateCommodityApiV1CommoditiesPostResponse =
  CreateCommodityApiV1CommoditiesPostResponses[keyof CreateCommodityApiV1CommoditiesPostResponses];

export type GetCommoditiesForDropdownApiV1CommoditiesDropdownGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/commodities/dropdown";
};

export type GetCommoditiesForDropdownApiV1CommoditiesDropdownGetResponses = {
  /**
   * Response Get Commodities For Dropdown Api V1 Commodities Dropdown Get
   * Successful Response
   */
  200: Array<CommodityInDropdown>;
};

export type GetCommoditiesForDropdownApiV1CommoditiesDropdownGetResponse =
  GetCommoditiesForDropdownApiV1CommoditiesDropdownGetResponses[keyof GetCommoditiesForDropdownApiV1CommoditiesDropdownGetResponses];

export type DeleteCommodityApiV1CommoditiesIdDeleteData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/commodities/{id}";
};

export type DeleteCommodityApiV1CommoditiesIdDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteCommodityApiV1CommoditiesIdDeleteError =
  DeleteCommodityApiV1CommoditiesIdDeleteErrors[keyof DeleteCommodityApiV1CommoditiesIdDeleteErrors];

export type DeleteCommodityApiV1CommoditiesIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteCommodityApiV1CommoditiesIdDeleteResponse =
  DeleteCommodityApiV1CommoditiesIdDeleteResponses[keyof DeleteCommodityApiV1CommoditiesIdDeleteResponses];

export type ReadCommodityApiV1CommoditiesIdGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/commodities/{id}";
};

export type ReadCommodityApiV1CommoditiesIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadCommodityApiV1CommoditiesIdGetError =
  ReadCommodityApiV1CommoditiesIdGetErrors[keyof ReadCommodityApiV1CommoditiesIdGetErrors];

export type ReadCommodityApiV1CommoditiesIdGetResponses = {
  /**
   * Successful Response
   */
  200: CommodityDetail;
};

export type ReadCommodityApiV1CommoditiesIdGetResponse =
  ReadCommodityApiV1CommoditiesIdGetResponses[keyof ReadCommodityApiV1CommoditiesIdGetResponses];

export type UpdateCommodityApiV1CommoditiesIdPutData = {
  body: CommodityUpdate;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/commodities/{id}";
};

export type UpdateCommodityApiV1CommoditiesIdPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateCommodityApiV1CommoditiesIdPutError =
  UpdateCommodityApiV1CommoditiesIdPutErrors[keyof UpdateCommodityApiV1CommoditiesIdPutErrors];

export type UpdateCommodityApiV1CommoditiesIdPutResponses = {
  /**
   * Successful Response
   */
  200: Commodity;
};

export type UpdateCommodityApiV1CommoditiesIdPutResponse =
  UpdateCommodityApiV1CommoditiesIdPutResponses[keyof UpdateCommodityApiV1CommoditiesIdPutResponses];

export type ReadRegionsApiV1RegionsGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
    /**
     * Is Division
     */
    is_division?: boolean | null;
  };
  url: "/api/v1/regions/";
};

export type ReadRegionsApiV1RegionsGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadRegionsApiV1RegionsGetError =
  ReadRegionsApiV1RegionsGetErrors[keyof ReadRegionsApiV1RegionsGetErrors];

export type ReadRegionsApiV1RegionsGetResponses = {
  /**
   * Response Read Regions Api V1 Regions  Get
   * Successful Response
   */
  200: Array<Region>;
};

export type ReadRegionsApiV1RegionsGetResponse =
  ReadRegionsApiV1RegionsGetResponses[keyof ReadRegionsApiV1RegionsGetResponses];

export type CreateRegionApiV1RegionsPostData = {
  body: RegionCreate;
  path?: never;
  query?: never;
  url: "/api/v1/regions/";
};

export type CreateRegionApiV1RegionsPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateRegionApiV1RegionsPostError =
  CreateRegionApiV1RegionsPostErrors[keyof CreateRegionApiV1RegionsPostErrors];

export type CreateRegionApiV1RegionsPostResponses = {
  /**
   * Successful Response
   */
  201: Region;
};

export type CreateRegionApiV1RegionsPostResponse =
  CreateRegionApiV1RegionsPostResponses[keyof CreateRegionApiV1RegionsPostResponses];

export type ReadRegionApiV1RegionsIdGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/regions/{id}";
};

export type ReadRegionApiV1RegionsIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadRegionApiV1RegionsIdGetError =
  ReadRegionApiV1RegionsIdGetErrors[keyof ReadRegionApiV1RegionsIdGetErrors];

export type ReadRegionApiV1RegionsIdGetResponses = {
  /**
   * Successful Response
   */
  200: Region;
};

export type ReadRegionApiV1RegionsIdGetResponse =
  ReadRegionApiV1RegionsIdGetResponses[keyof ReadRegionApiV1RegionsIdGetResponses];

export type ReadRegionPricesApiV1RegionsIdPricesGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
  };
  url: "/api/v1/regions/{id}/prices";
};

export type ReadRegionPricesApiV1RegionsIdPricesGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadRegionPricesApiV1RegionsIdPricesGetError =
  ReadRegionPricesApiV1RegionsIdPricesGetErrors[keyof ReadRegionPricesApiV1RegionsIdPricesGetErrors];

export type ReadRegionPricesApiV1RegionsIdPricesGetResponses = {
  /**
   * Response Read Region Prices Api V1 Regions  Id  Prices Get
   * Successful Response
   */
  200: Array<PriceRecord>;
};

export type ReadRegionPricesApiV1RegionsIdPricesGetResponse =
  ReadRegionPricesApiV1RegionsIdPricesGetResponses[keyof ReadRegionPricesApiV1RegionsIdPricesGetResponses];

export type ReadPriceRecordsApiV1PricesGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
    /**
     * Commodity Id
     */
    commodity_id?: number | null;
    /**
     * Region Id
     */
    region_id?: number | null;
    /**
     * Start Date
     */
    start_date?: Date | null;
    /**
     * End Date
     */
    end_date?: Date | null;
  };
  url: "/api/v1/prices/";
};

export type ReadPriceRecordsApiV1PricesGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadPriceRecordsApiV1PricesGetError =
  ReadPriceRecordsApiV1PricesGetErrors[keyof ReadPriceRecordsApiV1PricesGetErrors];

export type ReadPriceRecordsApiV1PricesGetResponses = {
  /**
   * Response Read Price Records Api V1 Prices  Get
   * Successful Response
   */
  200: Array<PriceRecord>;
};

export type ReadPriceRecordsApiV1PricesGetResponse =
  ReadPriceRecordsApiV1PricesGetResponses[keyof ReadPriceRecordsApiV1PricesGetResponses];

export type CreatePriceRecordApiV1PricesPostData = {
  body: PriceRecordCreate;
  path?: never;
  query?: never;
  url: "/api/v1/prices/";
};

export type CreatePriceRecordApiV1PricesPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreatePriceRecordApiV1PricesPostError =
  CreatePriceRecordApiV1PricesPostErrors[keyof CreatePriceRecordApiV1PricesPostErrors];

export type CreatePriceRecordApiV1PricesPostResponses = {
  /**
   * Successful Response
   */
  201: PriceRecord;
};

export type CreatePriceRecordApiV1PricesPostResponse =
  CreatePriceRecordApiV1PricesPostResponses[keyof CreatePriceRecordApiV1PricesPostResponses];

export type GetRegionalPricesApiV1PricesRegionsGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Commodity Id
     * ID of the commodity to get regional prices for
     */
    commodity_id: number;
    /**
     * Time Window
     * Time window in days for price trends (7, 30, 90)
     */
    time_window?: number;
  };
  url: "/api/v1/prices/regions";
};

export type GetRegionalPricesApiV1PricesRegionsGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetRegionalPricesApiV1PricesRegionsGetError =
  GetRegionalPricesApiV1PricesRegionsGetErrors[keyof GetRegionalPricesApiV1PricesRegionsGetErrors];

export type GetRegionalPricesApiV1PricesRegionsGetResponses = {
  /**
   * Response Get Regional Prices Api V1 Prices Regions Get
   * Successful Response
   */
  200: {
    [key: string]: Array<{
      [key: string]: unknown;
    }>;
  };
};

export type GetRegionalPricesApiV1PricesRegionsGetResponse =
  GetRegionalPricesApiV1PricesRegionsGetResponses[keyof GetRegionalPricesApiV1PricesRegionsGetResponses];

export type DeletePriceRecordApiV1PricesIdDeleteData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/prices/{id}";
};

export type DeletePriceRecordApiV1PricesIdDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeletePriceRecordApiV1PricesIdDeleteError =
  DeletePriceRecordApiV1PricesIdDeleteErrors[keyof DeletePriceRecordApiV1PricesIdDeleteErrors];

export type DeletePriceRecordApiV1PricesIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeletePriceRecordApiV1PricesIdDeleteResponse =
  DeletePriceRecordApiV1PricesIdDeleteResponses[keyof DeletePriceRecordApiV1PricesIdDeleteResponses];

export type ReadPriceRecordApiV1PricesIdGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/prices/{id}";
};

export type ReadPriceRecordApiV1PricesIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadPriceRecordApiV1PricesIdGetError =
  ReadPriceRecordApiV1PricesIdGetErrors[keyof ReadPriceRecordApiV1PricesIdGetErrors];

export type ReadPriceRecordApiV1PricesIdGetResponses = {
  /**
   * Successful Response
   */
  200: PriceRecord;
};

export type ReadPriceRecordApiV1PricesIdGetResponse =
  ReadPriceRecordApiV1PricesIdGetResponses[keyof ReadPriceRecordApiV1PricesIdGetResponses];

export type UpdatePriceRecordApiV1PricesIdPutData = {
  body: PriceRecordUpdate;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/prices/{id}";
};

export type UpdatePriceRecordApiV1PricesIdPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdatePriceRecordApiV1PricesIdPutError =
  UpdatePriceRecordApiV1PricesIdPutErrors[keyof UpdatePriceRecordApiV1PricesIdPutErrors];

export type UpdatePriceRecordApiV1PricesIdPutResponses = {
  /**
   * Successful Response
   */
  200: PriceRecord;
};

export type UpdatePriceRecordApiV1PricesIdPutResponse =
  UpdatePriceRecordApiV1PricesIdPutResponses[keyof UpdatePriceRecordApiV1PricesIdPutResponses];

export type ReadLocationsApiV1LocationsGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
  };
  url: "/api/v1/locations/";
};

export type ReadLocationsApiV1LocationsGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadLocationsApiV1LocationsGetError =
  ReadLocationsApiV1LocationsGetErrors[keyof ReadLocationsApiV1LocationsGetErrors];

export type ReadLocationsApiV1LocationsGetResponses = {
  /**
   * Response Read Locations Api V1 Locations  Get
   * Successful Response
   */
  200: Array<Location>;
};

export type ReadLocationsApiV1LocationsGetResponse =
  ReadLocationsApiV1LocationsGetResponses[keyof ReadLocationsApiV1LocationsGetResponses];

export type CreateLocationApiV1LocationsPostData = {
  body: LocationCreate;
  path?: never;
  query?: never;
  url: "/api/v1/locations/";
};

export type CreateLocationApiV1LocationsPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateLocationApiV1LocationsPostError =
  CreateLocationApiV1LocationsPostErrors[keyof CreateLocationApiV1LocationsPostErrors];

export type CreateLocationApiV1LocationsPostResponses = {
  /**
   * Successful Response
   */
  201: Location;
};

export type CreateLocationApiV1LocationsPostResponse =
  CreateLocationApiV1LocationsPostResponses[keyof CreateLocationApiV1LocationsPostResponses];

export type GetLocationsWithPricesApiV1LocationsWithPricesGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Lat
     * Center latitude for search
     */
    lat: number;
    /**
     * Lng
     * Center longitude for search
     */
    lng: number;
    /**
     * Radius Km
     * Search radius in kilometers
     */
    radius_km?: number;
    /**
     * Days
     * Number of days to look back for price data
     */
    days?: number;
    /**
     * Category
     * Filter by commodity category or group (agriculture, oil, pulses, vegetables, spices, fish, meat, dairy, grocery, fruits, poultry, stationery, construction, food, energy, household)
     */
    category?: string | null;
    /**
     * Commodity Id
     * Filter by specific commodity ID
     */
    commodity_id?: number | null;
    /**
     * Skip
     * Skip records for pagination
     */
    skip?: number;
    /**
     * Limit
     * Limit number of records returned
     */
    limit?: number;
  };
  url: "/api/v1/locations/with-prices";
};

export type GetLocationsWithPricesApiV1LocationsWithPricesGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetLocationsWithPricesApiV1LocationsWithPricesGetError =
  GetLocationsWithPricesApiV1LocationsWithPricesGetErrors[keyof GetLocationsWithPricesApiV1LocationsWithPricesGetErrors];

export type GetLocationsWithPricesApiV1LocationsWithPricesGetResponses = {
  /**
   * Response Get Locations With Prices Api V1 Locations With Prices Get
   * Successful Response
   */
  200: unknown;
};

export type DeleteLocationApiV1LocationsIdDeleteData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/locations/{id}";
};

export type DeleteLocationApiV1LocationsIdDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteLocationApiV1LocationsIdDeleteError =
  DeleteLocationApiV1LocationsIdDeleteErrors[keyof DeleteLocationApiV1LocationsIdDeleteErrors];

export type DeleteLocationApiV1LocationsIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteLocationApiV1LocationsIdDeleteResponse =
  DeleteLocationApiV1LocationsIdDeleteResponses[keyof DeleteLocationApiV1LocationsIdDeleteResponses];

export type ReadLocationApiV1LocationsIdGetData = {
  body?: never;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/locations/{id}";
};

export type ReadLocationApiV1LocationsIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadLocationApiV1LocationsIdGetError =
  ReadLocationApiV1LocationsIdGetErrors[keyof ReadLocationApiV1LocationsIdGetErrors];

export type ReadLocationApiV1LocationsIdGetResponses = {
  /**
   * Successful Response
   */
  200: Location;
};

export type ReadLocationApiV1LocationsIdGetResponse =
  ReadLocationApiV1LocationsIdGetResponses[keyof ReadLocationApiV1LocationsIdGetResponses];

export type UpdateLocationApiV1LocationsIdPutData = {
  body: LocationUpdate;
  path: {
    /**
     * Id
     */
    id: number;
  };
  query?: never;
  url: "/api/v1/locations/{id}";
};

export type UpdateLocationApiV1LocationsIdPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateLocationApiV1LocationsIdPutError =
  UpdateLocationApiV1LocationsIdPutErrors[keyof UpdateLocationApiV1LocationsIdPutErrors];

export type UpdateLocationApiV1LocationsIdPutResponses = {
  /**
   * Successful Response
   */
  200: Location;
};

export type UpdateLocationApiV1LocationsIdPutResponse =
  UpdateLocationApiV1LocationsIdPutResponses[keyof UpdateLocationApiV1LocationsIdPutResponses];

export type GetPriceTrendsApiV1AnalyticsTrendsGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Commodity Id
     */
    commodity_id?: number | null;
    /**
     * Region Id
     */
    region_id?: number | null;
    /**
     * Start Date
     */
    start_date?: Date | null;
    /**
     * End Date
     */
    end_date?: Date | null;
    /**
     * Period
     */
    period?: string;
  };
  url: "/api/v1/analytics/trends";
};

export type GetPriceTrendsApiV1AnalyticsTrendsGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetPriceTrendsApiV1AnalyticsTrendsGetError =
  GetPriceTrendsApiV1AnalyticsTrendsGetErrors[keyof GetPriceTrendsApiV1AnalyticsTrendsGetErrors];

export type GetPriceTrendsApiV1AnalyticsTrendsGetResponses = {
  /**
   * Response Get Price Trends Api V1 Analytics Trends Get
   * Successful Response
   */
  200: unknown;
};

export type GetRegionalComparisonApiV1AnalyticsComparisonGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Commodity Id
     */
    commodity_id: number;
    /**
     * Comparison Date
     */
    comparison_date?: Date | null;
  };
  url: "/api/v1/analytics/comparison";
};

export type GetRegionalComparisonApiV1AnalyticsComparisonGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetRegionalComparisonApiV1AnalyticsComparisonGetError =
  GetRegionalComparisonApiV1AnalyticsComparisonGetErrors[keyof GetRegionalComparisonApiV1AnalyticsComparisonGetErrors];

export type GetRegionalComparisonApiV1AnalyticsComparisonGetResponses = {
  /**
   * Response Get Regional Comparison Api V1 Analytics Comparison Get
   * Successful Response
   */
  200: unknown;
};

export type GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetData = {
  body?: never;
  path: {
    /**
     * Commodity Id
     */
    commodity_id: number;
  };
  query?: {
    /**
     * Timeframe
     */
    timeframe?: string | null;
  };
  url: "/api/v1/price-analysis/{commodity_id}";
};

export type GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetError =
  GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetErrors[keyof GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetErrors];

export type GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetResponses = {
  /**
   * Response Get Price Analysis Api V1 Price Analysis  Commodity Id  Get
   * Successful Response
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetResponse =
  GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetResponses[keyof GetPriceAnalysisApiV1PriceAnalysisCommodityIdGetResponses];

export type GetScrapingStatusApiV1ScraperStatusGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/scraper/status";
};

export type GetScrapingStatusApiV1ScraperStatusGetResponses = {
  /**
   * Response Get Scraping Status Api V1 Scraper Status Get
   * Successful Response
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetScrapingStatusApiV1ScraperStatusGetResponse =
  GetScrapingStatusApiV1ScraperStatusGetResponses[keyof GetScrapingStatusApiV1ScraperStatusGetResponses];

export type StartTcbScrapingApiV1ScraperStartPostData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Force Full Scrape
     */
    force_full_scrape?: boolean;
  };
  url: "/api/v1/scraper/start";
};

export type StartTcbScrapingApiV1ScraperStartPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type StartTcbScrapingApiV1ScraperStartPostError =
  StartTcbScrapingApiV1ScraperStartPostErrors[keyof StartTcbScrapingApiV1ScraperStartPostErrors];

export type StartTcbScrapingApiV1ScraperStartPostResponses = {
  /**
   * Response Start Tcb Scraping Api V1 Scraper Start Post
   * Successful Response
   */
  200: {
    [key: string]: string;
  };
};

export type StartTcbScrapingApiV1ScraperStartPostResponse =
  StartTcbScrapingApiV1ScraperStartPostResponses[keyof StartTcbScrapingApiV1ScraperStartPostResponses];

export type StopScrapingApiV1ScraperStopPostData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/scraper/stop";
};

export type StopScrapingApiV1ScraperStopPostResponses = {
  /**
   * Response Stop Scraping Api V1 Scraper Stop Post
   * Successful Response
   */
  200: {
    [key: string]: string;
  };
};

export type StopScrapingApiV1ScraperStopPostResponse =
  StopScrapingApiV1ScraperStopPostResponses[keyof StopScrapingApiV1ScraperStopPostResponses];

export type GetAccidentDataApiV1AccidentDataGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     */
    skip?: number;
    /**
     * Limit
     */
    limit?: number;
  };
  url: "/api/v1/accident-data/";
};

export type GetAccidentDataApiV1AccidentDataGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAccidentDataApiV1AccidentDataGetError =
  GetAccidentDataApiV1AccidentDataGetErrors[keyof GetAccidentDataApiV1AccidentDataGetErrors];

export type GetAccidentDataApiV1AccidentDataGetResponses = {
  /**
   * Response Get Accident Data Api V1 Accident Data  Get
   * Successful Response
   */
  200: Array<AccidentData>;
};

export type GetAccidentDataApiV1AccidentDataGetResponse =
  GetAccidentDataApiV1AccidentDataGetResponses[keyof GetAccidentDataApiV1AccidentDataGetResponses];

export type CreateAccidentDataApiV1AccidentDataPostData = {
  body: AccidentDataCreate;
  path?: never;
  query?: never;
  url: "/api/v1/accident-data/";
};

export type CreateAccidentDataApiV1AccidentDataPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateAccidentDataApiV1AccidentDataPostError =
  CreateAccidentDataApiV1AccidentDataPostErrors[keyof CreateAccidentDataApiV1AccidentDataPostErrors];

export type CreateAccidentDataApiV1AccidentDataPostResponses = {
  /**
   * Successful Response
   */
  201: AccidentData;
};

export type CreateAccidentDataApiV1AccidentDataPostResponse =
  CreateAccidentDataApiV1AccidentDataPostResponses[keyof CreateAccidentDataApiV1AccidentDataPostResponses];

export type DeleteAccidentDataApiV1AccidentDataYearDeleteData = {
  body?: never;
  path: {
    /**
     * Year
     */
    year: number;
  };
  query?: never;
  url: "/api/v1/accident-data/{year}";
};

export type DeleteAccidentDataApiV1AccidentDataYearDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteAccidentDataApiV1AccidentDataYearDeleteError =
  DeleteAccidentDataApiV1AccidentDataYearDeleteErrors[keyof DeleteAccidentDataApiV1AccidentDataYearDeleteErrors];

export type DeleteAccidentDataApiV1AccidentDataYearDeleteResponses = {
  /**
   * Response Delete Accident Data Api V1 Accident Data  Year  Delete
   * Successful Response
   */
  200: unknown;
};

export type GetAccidentDataByYearApiV1AccidentDataYearGetData = {
  body?: never;
  path: {
    /**
     * Year
     */
    year: number;
  };
  query?: never;
  url: "/api/v1/accident-data/{year}";
};

export type GetAccidentDataByYearApiV1AccidentDataYearGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAccidentDataByYearApiV1AccidentDataYearGetError =
  GetAccidentDataByYearApiV1AccidentDataYearGetErrors[keyof GetAccidentDataByYearApiV1AccidentDataYearGetErrors];

export type GetAccidentDataByYearApiV1AccidentDataYearGetResponses = {
  /**
   * Successful Response
   */
  200: AccidentData;
};

export type GetAccidentDataByYearApiV1AccidentDataYearGetResponse =
  GetAccidentDataByYearApiV1AccidentDataYearGetResponses[keyof GetAccidentDataByYearApiV1AccidentDataYearGetResponses];

export type UpdateAccidentDataApiV1AccidentDataYearPutData = {
  body: AccidentDataUpdate;
  path: {
    /**
     * Year
     */
    year: number;
  };
  query?: never;
  url: "/api/v1/accident-data/{year}";
};

export type UpdateAccidentDataApiV1AccidentDataYearPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateAccidentDataApiV1AccidentDataYearPutError =
  UpdateAccidentDataApiV1AccidentDataYearPutErrors[keyof UpdateAccidentDataApiV1AccidentDataYearPutErrors];

export type UpdateAccidentDataApiV1AccidentDataYearPutResponses = {
  /**
   * Successful Response
   */
  200: AccidentData;
};

export type UpdateAccidentDataApiV1AccidentDataYearPutResponse =
  UpdateAccidentDataApiV1AccidentDataYearPutResponses[keyof UpdateAccidentDataApiV1AccidentDataYearPutResponses];

export type GetAllAccidentsDataApiV1AllAccidentsDataGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Skip
     * Number of records to skip
     */
    skip?: number;
    /**
     * Limit
     * Maximum number of records to return
     */
    limit?: number;
    /**
     * District
     * Filter by district
     */
    district?: string | null;
    /**
     * Accident Type
     * Filter by accident type
     */
    accident_type?: string | null;
  };
  url: "/api/v1/all-accidents-data/";
};

export type GetAllAccidentsDataApiV1AllAccidentsDataGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAllAccidentsDataApiV1AllAccidentsDataGetError =
  GetAllAccidentsDataApiV1AllAccidentsDataGetErrors[keyof GetAllAccidentsDataApiV1AllAccidentsDataGetErrors];

export type GetAllAccidentsDataApiV1AllAccidentsDataGetResponses = {
  /**
   * Response Get All Accidents Data Api V1 All Accidents Data  Get
   * Successful Response
   */
  200: Array<AllAccidentsData>;
};

export type GetAllAccidentsDataApiV1AllAccidentsDataGetResponse =
  GetAllAccidentsDataApiV1AllAccidentsDataGetResponses[keyof GetAllAccidentsDataApiV1AllAccidentsDataGetResponses];

export type CreateAccidentRecordApiV1AllAccidentsDataPostData = {
  body: AllAccidentsDataCreate;
  path?: never;
  query?: never;
  url: "/api/v1/all-accidents-data/";
};

export type CreateAccidentRecordApiV1AllAccidentsDataPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateAccidentRecordApiV1AllAccidentsDataPostError =
  CreateAccidentRecordApiV1AllAccidentsDataPostErrors[keyof CreateAccidentRecordApiV1AllAccidentsDataPostErrors];

export type CreateAccidentRecordApiV1AllAccidentsDataPostResponses = {
  /**
   * Successful Response
   */
  201: AllAccidentsData;
};

export type CreateAccidentRecordApiV1AllAccidentsDataPostResponse =
  CreateAccidentRecordApiV1AllAccidentsDataPostResponses[keyof CreateAccidentRecordApiV1AllAccidentsDataPostResponses];

export type GetAllAccidentsCountApiV1AllAccidentsDataCountGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * District
     * Filter by district
     */
    district?: string | null;
    /**
     * Accident Type
     * Filter by accident type
     */
    accident_type?: string | null;
  };
  url: "/api/v1/all-accidents-data/count";
};

export type GetAllAccidentsCountApiV1AllAccidentsDataCountGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAllAccidentsCountApiV1AllAccidentsDataCountGetError =
  GetAllAccidentsCountApiV1AllAccidentsDataCountGetErrors[keyof GetAllAccidentsCountApiV1AllAccidentsDataCountGetErrors];

export type GetAllAccidentsCountApiV1AllAccidentsDataCountGetResponses = {
  /**
   * Response Get All Accidents Count Api V1 All Accidents Data Count Get
   * Successful Response
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetAllAccidentsCountApiV1AllAccidentsDataCountGetResponse =
  GetAllAccidentsCountApiV1AllAccidentsDataCountGetResponses[keyof GetAllAccidentsCountApiV1AllAccidentsDataCountGetResponses];

export type DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteData = {
  body?: never;
  path: {
    /**
     * U Id
     */
    u_id: number;
  };
  query?: never;
  url: "/api/v1/all-accidents-data/{u_id}";
};

export type DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteError =
  DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteErrors[keyof DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteErrors];

export type DeleteAccidentRecordApiV1AllAccidentsDataUIdDeleteResponses = {
  /**
   * Response Delete Accident Record Api V1 All Accidents Data  U Id  Delete
   * Successful Response
   */
  200: unknown;
};

export type GetAccidentByIdApiV1AllAccidentsDataUIdGetData = {
  body?: never;
  path: {
    /**
     * U Id
     */
    u_id: number;
  };
  query?: never;
  url: "/api/v1/all-accidents-data/{u_id}";
};

export type GetAccidentByIdApiV1AllAccidentsDataUIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAccidentByIdApiV1AllAccidentsDataUIdGetError =
  GetAccidentByIdApiV1AllAccidentsDataUIdGetErrors[keyof GetAccidentByIdApiV1AllAccidentsDataUIdGetErrors];

export type GetAccidentByIdApiV1AllAccidentsDataUIdGetResponses = {
  /**
   * Successful Response
   */
  200: AllAccidentsData;
};

export type GetAccidentByIdApiV1AllAccidentsDataUIdGetResponse =
  GetAccidentByIdApiV1AllAccidentsDataUIdGetResponses[keyof GetAccidentByIdApiV1AllAccidentsDataUIdGetResponses];

export type UpdateAccidentRecordApiV1AllAccidentsDataUIdPutData = {
  body: AllAccidentsDataUpdate;
  path: {
    /**
     * U Id
     */
    u_id: number;
  };
  query?: never;
  url: "/api/v1/all-accidents-data/{u_id}";
};

export type UpdateAccidentRecordApiV1AllAccidentsDataUIdPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateAccidentRecordApiV1AllAccidentsDataUIdPutError =
  UpdateAccidentRecordApiV1AllAccidentsDataUIdPutErrors[keyof UpdateAccidentRecordApiV1AllAccidentsDataUIdPutErrors];

export type UpdateAccidentRecordApiV1AllAccidentsDataUIdPutResponses = {
  /**
   * Successful Response
   */
  200: AllAccidentsData;
};

export type UpdateAccidentRecordApiV1AllAccidentsDataUIdPutResponse =
  UpdateAccidentRecordApiV1AllAccidentsDataUIdPutResponses[keyof UpdateAccidentRecordApiV1AllAccidentsDataUIdPutResponses];

export type GetAccidentScrapingStatusApiV1AccidentScrapingStatusGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/accident-scraping/status";
};

export type GetAccidentScrapingStatusApiV1AccidentScrapingStatusGetResponses = {
  /**
   * Response Get Accident Scraping Status Api V1 Accident Scraping Status Get
   * Successful Response
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetAccidentScrapingStatusApiV1AccidentScrapingStatusGetResponse =
  GetAccidentScrapingStatusApiV1AccidentScrapingStatusGetResponses[keyof GetAccidentScrapingStatusApiV1AccidentScrapingStatusGetResponses];

export type StartAccidentScrapingApiV1AccidentScrapingStartPostData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/accident-scraping/start";
};

export type StartAccidentScrapingApiV1AccidentScrapingStartPostResponses = {
  /**
   * Response Start Accident Scraping Api V1 Accident Scraping Start Post
   * Successful Response
   */
  200: {
    [key: string]: string;
  };
};

export type StartAccidentScrapingApiV1AccidentScrapingStartPostResponse =
  StartAccidentScrapingApiV1AccidentScrapingStartPostResponses[keyof StartAccidentScrapingApiV1AccidentScrapingStartPostResponses];

export type ScrapeDailyAccidentDataSyncApiV1AccidentScrapingScrapeDailyAccidentDataGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/accident-scraping/scrape-daily-accident-data";
};

export type ScrapeDailyAccidentDataSyncApiV1AccidentScrapingScrapeDailyAccidentDataGetResponses = {
  /**
   * Successful Response
   */
  200: AccidentScrapingResponse;
};

export type ScrapeDailyAccidentDataSyncApiV1AccidentScrapingScrapeDailyAccidentDataGetResponse =
  ScrapeDailyAccidentDataSyncApiV1AccidentScrapingScrapeDailyAccidentDataGetResponses[keyof ScrapeDailyAccidentDataSyncApiV1AccidentScrapingScrapeDailyAccidentDataGetResponses];

export type StopAccidentScrapingApiV1AccidentScrapingStopPostData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/accident-scraping/stop";
};

export type StopAccidentScrapingApiV1AccidentScrapingStopPostResponses = {
  /**
   * Response Stop Accident Scraping Api V1 Accident Scraping Stop Post
   * Successful Response
   */
  200: {
    [key: string]: string;
  };
};

export type StopAccidentScrapingApiV1AccidentScrapingStopPostResponse =
  StopAccidentScrapingApiV1AccidentScrapingStopPostResponses[keyof StopAccidentScrapingApiV1AccidentScrapingStopPostResponses];

export type ReadRootGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/";
};

export type ReadRootGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type HealthCheckHealthcheckGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/healthcheck";
};

export type HealthCheckHealthcheckGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
